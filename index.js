// Generated by CoffeeScript 1.10.0
(function() {
  var InfiniteScroll, STEP_DEFAULT,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  STEP_DEFAULT = 10;

  module.exports = InfiniteScroll = (function() {
    function InfiniteScroll() {
      this.inViewport = bind(this.inViewport, this);
      this.infiniteScroll = bind(this.infiniteScroll, this);
    }

    InfiniteScroll.prototype.name = 'k-infinitescroll';

    InfiniteScroll.prototype.updating = false;

    InfiniteScroll.prototype.element = false;

    InfiniteScroll.prototype.path = null;

    InfiniteScroll.prototype.create = function() {
      var element, queryHash;
      element = this.model.get('element');
      this.path = this.model.get('path');
      this.step = parseInt(this.model.get('step') || STEP_DEFAULT, 10);
      if (this.path && element && typeof window !== 'undefined') {
        window.addEventListener('scroll', this.infiniteScroll);
        this.element = document.getElementById(element);
        queryHash = this.model.root._refLists.fromMap['_page.items'].idsSegments[1];
        return this.query = this.model.root._queries.get(queryHash);
      }
    };

    InfiniteScroll.prototype.infiniteScroll = function() {
      var expr, last;
      last = this.element && this.element.lastElementChild;
      if (this.query && last && !this.updating && this.inViewport(last)) {
        this.updating = true;
        setTimeout(((function(_this) {
          return function() {
            return _this.updating = false;
          };
        })(this)), 100);
        expr = this.query.expression;
        expr['$limit'] += this.step;
        this.query.setQuery(expr);
        return this.query.send();
      }
    };

    InfiniteScroll.prototype.inViewport = function(el) {
      var rect;
      if (el && el.getBoundingClientRect) {
        rect = el.getBoundingClientRect();
        return rect.top >= 0 && rect.left >= 0 && rect.bottom > 0 && rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && rect.right <= (window.innerWidth || document.documentElement.clientWidth);
      }
    };

    return InfiniteScroll;

  })();

}).call(this);
